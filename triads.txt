[(VAR, с), (VAR_TYPE, целый), (NUMBER, 2), (ASSIGN_OP, =), (SEP, ;), (VAR, а), (VAR_TYPE, целый), (SEP, ;),
(VAR, а), (NUMBER, 25), (ASSIGN_OP, =), (SEP, ;), (VAR, азъ), (VAR_TYPE, целый), (NUMBER, 228), (ASSIGN_OP, =), (SEP, ;),
(VAR, буки), (VAR_TYPE, целый), (NUMBER, 21), (ASSIGN_OP, =), (SEP, ;), (VAR, веди), (VAR_TYPE, целый), (NUMBER, 1488), (ASSIGN_OP, =), (SEP, ;),
(VAR, глаг), (VAR_TYPE, целый), (NUMBER, 14), (NUMBER, 3), (OP, +), (ASSIGN_OP, =), (SEP, ;),
(VAR, значимо), (VAR_TYPE, целый), (VAR, а), (VAR, с), (OP, +), (NUMBER, 2), (OP, *), (VAR, глаг), (OP, -), (ASSIGN_OP, =), (SEP, ;),
(VAR, в), (VAR_TYPE, целый), (VAR, значимо), (VAR, с), (OP, +), (ASSIGN_OP, =), (SEP, ;),
(VAR, буки), (NUMBER, 22), (LOGICAL_OP, <=), (NUMBER, 65), (OP, !F), (VAR, а), (VAR, а), (NUMBER, 1), (OP, +), (ASSIGN_OP, =), (SEP, ;), (NUMBER, 76), (OP, !!),
(VAR, буки), (NUMBER, 20), (LOGICAL_OP, >), (NUMBER, 76), (OP, !F), (VAR, а), (VAR, а), (NUMBER, 1), (OP, -), (ASSIGN_OP, =), (SEP, ;),
(VAR, а), (NUMBER, 10), (LOGICAL_OP, >=), (NUMBER, 101), (OP, !F), (VAR, а), (VAR, а), (NUMBER, 2), (OP, /), (ASSIGN_OP, =), (SEP, ;),
(VAR, азъ), (VAR, азъ), (NUMBER, 5), (OP, +), (ASSIGN_OP, =), (SEP, ;), (VAR, веди), (VAR, веди), (NUMBER, 10), (OP, +), (ASSIGN_OP, =), (SEP, ;),
(NUMBER, 76), (OP, !!), (VAR, а), (VAR, а), (NUMBER, 3), (OP, *), (ASSIGN_OP, =), (SEP, ;), (VAR, а), (NUMBER, 30), (LOGICAL_OP, <), (NUMBER, 101), (OP, !T),
(VAR, ис), (VAR_TYPE, испис), (SEP, ;), (VAR, ис), (VAR, ис), (VAR, а), (OP, +), (ASSIGN_OP, =), (SEP, ;),
(VAR, с), (VAR, ис), (NUMBER, 0), (OP, #), (ASSIGN_OP, =), (SEP, ;), (VAR, зам), (VAR_TYPE, замет), (SEP, ;), (VAR, зам), (VAR, зам), (VAR, в), (OP, +), (ASSIGN_OP, =), (SEP, ;),
(VAR, су), (VAR_TYPE, суть), (SEP, ;), (VAR, су), (VAR, зам), (VAR, в), (OP, #), (ASSIGN_OP, =), (SEP, ;),
(VAR, а), (PRINT_KW, изъявити), (SEP, ;), (VAR, значимо), (PRINT_KW, изъявити), (SEP, ;), (VAR, су), (PRINT_KW, изъявити), (SEP, ;),
(VAR, ис), (PRINT_KW, изъявити), (SEP, ;), (VAR, зам), (PRINT_KW, изъявити), (SEP, ;), (VAR, а), (PRINT_KW, изъявити), (SEP, ;)]


t0: (целый, с)
t1: (=, t0, 2)
t2: (;)
t3: (целый, а)
t4: (;)
t5: (=, а, 25)
t6: (;)
t7: (целый, азъ)
t8: (=, t7, 228)
t9: (;)
t10: (целый, буки)
t11: (=, t10, 21)
t12: (;)
t13: (целый, веди)
t14: (=, t13, 1488)
t15: (;)
t16: (целый, глаг)
t17: (+, 14, 3)
t18: (=, t16, t17)
t19: (;)
t20: (целый, значимо)
t21: (+, а, с)
t22: (*, t21, 2)
t23: (-, t22, глаг)
t24: (=, t20, t23)
t25: (;)
t26: (целый, в)
t27: (+, значимо, с)
t28: (=, t26, t27)
t29: (;)
t30: (<=, буки, 22)
t31: (!F, t30, t36)
t32: (+, а, 1)
t33: (=, а, t32)
t34: (;)
t35: (!!, t41)
t36: (>, буки, 20)
t37: (!F, t36, t41)
t38: (-, a, 1)
t39: (=, a, t38)
t40: (;)
t41: (>=, a, 10)
t42: (!F, t41, t53)
t43: (/, a, 2)
t44: (=, a, t43)
t45: (;)
t46: (+, aзъ, 5)
t47: (=, aзъ, t46)
t48: (;)
t49: (+, веди, 10)
t50: (=, веди, t49)
t51: (;)
t52: (!!, t41)
t53: (*, a, 3)
t54: (=, a, t53)
t55: (;)
t56: (<, a, 30)
t57: (!T, t56, t53)
t58: (испис, ис)
t59: (;)
t60: (+, ис, а)
t61: (=, a, t60)
t62: (;)
t63: (#, ис, 0)
t64: (=, c, t63)
t65: (;)
t66: (замет, зам)
t67: (;)
t68: (+, зам, в)
t69: (=, зам, t68)
t70: (;)
t71: (суть, су)
t72: (;)
t73: (#, зам, в)
t74: (=, су, t73)
t75: (;)
t76: (изъявити. а)
t77: (;)
t78: (изъявити. значимо)
t79: (;)
t80: (изъявити. су)
t81: (;)
t82: (изъявити. ис)
t83: (;)
t84: (изъявити. зам)
t85: (;)
t86: (изъявити. а)
t87: (;)




// Раскрывается без проблем. Ссылку на t0 удалить, так как она находится прямо перед выражением
t0: ((VAR_TYPE, целый), (VAR, с), null)
t1: ((ASSIGN_OP, =), (TRIAD, 0), (NUMBER, 2))
t2: ((SEP, ;), null, null)

(VAR, с), ((VAR_TYPE, целый), (NUMBER, 2), (ASSIGN_OP, =), (SEP, ;)

// Раскрывается без проблем
t5: ((ASSIGN_OP, =), (VAR, а), (NUMBER, 25))
t6: ((SEP, ;), null, null)

(VAR, а), (NUMBER, 25), (ASSIGN_OP, =), (SEP, ;)

// Раскрывается без проблем
t10: ((VAR_TYPE, целый), (VAR, глаг), null)
t11: ((ASSIGN_OP, =), (TRIAD, 10), (NUMBER, 17))
t12: ((SEP, ;), null, null)

(VAR, глаг), (VAR_TYPE, целый), (NUMBER, 17), (ASSIGN_OP, =), (SEP, ;),


// Левый операнд присваивания вставить перед всеми действиями, после более раннего SEP
t25: ((OP, +), (VAR, а), (NUMBER, 1))
t26: ((ASSIGN_OP, =), (VAR, а), (TRIAD, 25))
t27: ((SEP, ;), null, null)

(VAR, а), (VAR, а), (NUMBER, 1), (OP, +), (ASSIGN_OP, =), (SEP, ;)

Ссылки на другие триады обрабатывать так: находить крайний левый элемент из триады, а затем перемещать ссылку на элемент,
упирающийся в SEP справа